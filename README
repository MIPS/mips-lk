=== Getting started with the MIPS LK TEE project ===

Updated: Oct 26, 2016.

The mips-lk TEE project expands on the LK and Trusty code bases to implement a
Trusted Execution Environment following the GlobalPlatform GP API security
requirements.
The project itself is still work in progress.


Directory layout
================

The following directories in this repository are subtrees tracking remote
repositories.  The remote references are not automatically restored when
cloning.

lk/              - https://github.com/travisg/lk.git
trusty/          - https://android.googlesource.com/trusty/lk/trusty
app/sample/      - https://android.googlesource.com/trusty/app/sample
lib/             - https://android.googlesource.com/trusty/lib
external/headers - https://android.googlesource.com/trusty/external/headers


The initial LK setup was achieved using:
   git remote add -f lk-upstream https://github.com/travisg/lk.git
   git merge -s ours --no-commit lk-upstream/master
   git read-tree -u --prefix=lk/ lk-upstream/master
   git commit

To update LK from upstream:
   git remote add -f lk-upstream https://github.com/travisg/lk.git
   git pull -s recursive -X subtree=lk lk-upstream master


The Google Trusty directories in this repository where originally obtained from
the locations shown above and moved into subtrees. The Trusty codebase in this
repository is no longer actively tracking upstream Trusty changes.


TEE project directory structure
===============================

The following directories contain the code providing the TEE system
functionalities.

lib/lib/libutee   : user space GP API implementation
trusty/lib/tee    : implementation of TEE syscalls and kernel space functions
app/tee/sess_mngr : privileged user space application enabling secure CA-TA
                    communication
app/tee_unittest  : GP API unit test framework

Refer to the app/tee_unittest/README file for information on the tee_unittest
framework.

